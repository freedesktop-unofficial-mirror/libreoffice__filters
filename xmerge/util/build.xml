<?xml version="1.0" encoding="UTF-8"?>
<!--
 #  The Contents of this file are made available subject to the terms of
 #  either of the following licenses
 #
 #         - GNU Lesser General Public License Version 2.1
 #         - Sun Industry Standards Source License Version 1.1
 #
 #  Sun Microsystems Inc., October, 2000
 #
 #  GNU Lesser General Public License Version 2.1
 #  =============================================
 #  Copyright 2000 by Sun Microsystems, Inc.
 #  901 San Antonio Road, Palo Alto, CA 94303, USA
 #
 #  This library is free software; you can redistribute it and/or
 #  modify it under the terms of the GNU Lesser General Public
 #  License version 2.1, as published by the Free Software Foundation.
 #
 #  This library is distributed in the hope that it will be useful,
 #  but WITHOUT ANY WARRANTY; without even the implied warranty of
 #  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 #  Lesser General Public License for more details.
 #
 #  You should have received a copy of the GNU Lesser General Public
 #  License along with this library; if not, write to the Free Software
 #  Foundation, Inc., 59 Temple Place, Suite 330, Boston,
 #  MA  02111-1307  USA
 #
 #
 #  Sun Industry Standards Source License Version 1.1
 #  =================================================
 #  The contents of this file are subject to the Sun Industry Standards
 #  Source License Version 1.1 (the "License"); You may not use this file
 #  except in compliance with the License. You may obtain a copy of the
 #  License at http://www.openoffice.org/license.html.
 #
 #  Software provided under this License is provided on an "AS IS" basis,
 #  WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING,
 #  WITHOUT LIMITATION, WARRANTIES THAT THE SOFTWARE IS FREE OF DEFECTS,
 #  MERCHANTABLE, FIT FOR A PARTICULAR PURPOSE, OR NON-INFRINGING.
 #  See the License for the specific provisions governing your rights and
 #  obligations concerning the Software.
 #
 #  The Initial Developer of the Original Code is: Sun Microsystems, Inc.
 #
 #  Copyright: 2000 by Sun Microsystems, Inc.
 #
 #  All Rights Reserved.
 #
 #  Contributor(s): _______________________________________
 #
 #
 -->
<project name="xmrg_util" default="main" basedir=".">

    <!-- ================================================================= -->
    <!-- settings                                                          -->
    <!-- ================================================================= -->

    <!-- project prefix, used for targets and build.lst  -->
    <property name="prj.prefix" value="xmrg"/>

    <!-- name of this sub target used in recursive builds -->
    <property name="target" value="xmrg_util"/>

    <!-- relative path to project directory -->
    <property name="prj" value=".."/>

    <!-- start of java source code package structure -->
    <property name="java.dir" value="../java"/>

    <!-- path component for java package -->
    <property name="package" value="org/openoffice/xmerge"/>

     <property name="aportis" value="org/openoffice/xmerge/converter/xml/sxw/aportisdoc"/>

    <!-- path component for java package -->
    <property name="htmlsoff" value="org/openoffice/xmerge/converter/xml/xslt"/>
    
    <!-- path component for java package -->
    <property name="pocketword" value="org/openoffice/xmerge/converter/xml/sxw/pocketword"/>

    <!-- name of jar file created, without .jar extension -->
    <property name="jarname1" value="xmerge"/>

    <!-- name of jar file created, without .jar extension -->
    <property name="jarname2" value="htmlsoff"/>
      
    <!-- name of jar file created, without .jar extension -->
    <property name="jarname3" value="aportisdoc"/>
    
    <!-- name of jar file created, without .jar extension -->
    <property name="jarname4" value="pocketword"/>


    <!-- ================================================================= -->
    <!--  solar build environment targets                                  -->
    <!-- ================================================================= -->

    <target name="build_dir" unless="build.dir">
        <property name="build.dir" value="${out}"/>
    </target>

    <target name="solar" depends="build_dir" if="solar.update">
        <property name="solar.properties"
                  value="${solar.bin}/solar.properties"/>
    </target>

    <target name="init" depends="solar">
        <property name="build.compiler" value="classic"/>
        <property file="${solar.properties}"/>
        <property file="${build.dir}/class/solar.properties"/>
    </target>


    <target name="info">
        <echo message="--------------------"/>
        <echo message="${target}"/>
        <echo message="--------------------"/>
    </target>


    <!-- ================================================================= -->
    <!-- custom targets                                                    -->
    <!-- ================================================================= -->

    <!-- the main target, called in recursive builds -->
    <target name="main" depends="info,prepare,xmerge,htmlsoff,aportis,pocketword"/>


    <!-- prepare output directories -->
    <target name="prepare" depends="init" if="build.class">
        <mkdir dir="${build.dir}"/>
        <mkdir dir="${build.class}"/>
    </target>

    <!-- create xmerge jar file -->
    <target name="xmerge" depends="prepare" if="build.class">
        <jar jarfile="${build.class}/${jarname1}.jar"
             basedir="${build.class}"
             manifest="${jarname1}.mf">
            <include name="${package}/**"/>
            <exclude name="${aportis}/**"/>
            <exclude name="${pocketword}/**"/>
        </jar>
    </target>

     <!-- create htmlsoff jar file -->
    <target name="htmlsoff" depends="prepare,xmerge" if="build.class">
        <jar jarfile="${build.class}/${jarname2}.jar"
             basedir="${java.dir}/${htmlsoff}">
            <include name="htmltosoff.xsl"/>
        <include name="sofftohtml.xsl"/>
            <metainf dir="${java.dir}/${htmlsoff}" includes="converter.xml"/>
        </jar>
    </target>
    
    
    <!-- create pocketword jar file -->
    <target name="pocketword" depends="prepare,xmerge" if="build.class">
        <jar jarfile="${build.class}/${jarname3}.jar"
             basedir="${build.class}">
            <include name="${pocketword}/**"/>
            <metainf dir="${java.dir}/${pocketword}" includes="converter.xml"/>
        </jar>
    </target>

     <!-- create aportis jar file -->
    <target name="aportis" depends="prepare,xmerge" if="build.class">
        <jar jarfile="${build.class}/${jarname3}.jar"
             basedir="${build.class}">
            <include name="${aportis}/**"/>
            <metainf dir="${java.dir}/${aportis}" includes="converter.xml"/>
        </jar>
    </target>

    <!-- clean up -->
    <target name="clean" depends="prepare">
        <delete file="${build.class}/${jarname1}.jar"/>
        <delete file="${build.class}/${jarname2}.jar"/>
        <delete file="${build.class}/${jarname3}.jar"/>
    </target>
     
</project>

